///////////////////////////////////////////////////////////////////////////////////
// Toadstool 25/04/2012
//
// OnRemoveScript
//
// For: Every container type should have this script.
// Currently runebooks don't as they have their own script in their own package.
//
// Special containers, ie spellbooks (pre 096), runebooks use their own.
//
// Note: Corpse now moved here, for obvious reasons.
//
////////////////////////////////////////////////////////////////////////////////////


use uo; 
use os;

include ":loot:antiloot";
include ":housing:utility";

program Container_CanRemoveScript(who, container,item, movetype)

// movetype player == 0;
// movetype core   == 1;

// Further Note: This is ONLY triggered by a player moving....
// Be carefull with using MoveItemToLocation etc....

// locked container, no need for messages as they shouldn't even be able to see in it
// This is first as no matter what, if a container is locked nothing can be moved
if (container.locked)
	return 0;
endif

// container is in a container, we check main container to see if we can move
repeat
	if (container.container)
		// again if the containers locked, don't let movement
		if (container.locked)
			return 0;
		else
			// assign the master container as the container container, and so on
			container := container.container;
		endif
	endif
until (!container.container);

// 2nd lock check
if (container.locked)
	return 0;
endif

// Corpses function kept seperate, very long.
if (container.isa(POLCLASS_CORPSE))
	if (movetype == 1 && !GetGlobalProperty("GlobalNoLoot"))
		return 1; // core move ignores everything
	else
		return antilooting( who, container, item );
	endif
endif

// Now we have the MASTER container, even if the container was within 100 containers...

// Secure container
if (GetObjProperty(container, "houseserial"))
	return SecureRemove(who, container, item);
endif

return 1;

endprogram

function SecureRemove(who, container, item)

// the house/sign serial
var sign := SystemFindObjectBySerial(GetObjProperty(container, "houseserial"));


// owner/cowoner can use his own secure, no more checking
if ( IsCowner( who, sign ) )
	return 1;
endif

// Only friends now, with different level of access
var friends := GetObjProperty(sign, "Friends");

foreach friend in friends
	if (friend[1] == who.serial)
		if (friend[REMOVE_FROM_SECURE] == 1)
			SetObjProperty(item, "#SecureRemove", {container.serial,ReadGameClock()}); // used to allow viewers to put items back
			return 1;
		else
			SendSysMessage(who, "You don't have the permission level to move items.");
			return 0;
		endif	
	endif
endforeach

return 0;

endfunction

