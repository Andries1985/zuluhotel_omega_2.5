use uo;
use os;

include "include/spelldata";
include "include/classes";
include "include/client";
include "include/attributes";

program cast_summon( parms, spell_id )

	var circle := 5;
	var caster;
	var cast_loc;
	var fromhit;

	if (parms[1] == "#MOB")
		caster := parms[2];

		cast_loc := parms[3];
		if (parms[4])
			circle := parms[4];
		endif
		if (parms[5])
			fromhit := parms[5];
		endif

	else

        caster := parms;
		// For scrolls, StartSpellScript isn't working >:(
		if (TypeOf(parms) == "Array")
			caster := parms[1];
			spell_id := parms[2];
		endif
		if (TryToCast( caster, spell_id ) != SUCCESS);
			EraseObjProperty(caster, "#Casting");
			return 0;
		endif
        cast_loc := CanTargetArea(caster, circle);
		if( IsInNOPKArea(cast_loc) )
    	    SendSysMessage( caster, "Can't cast this spell in NO-PK zone." );
			if(GetObjProperty(caster, "#SpellMove"))
				EraseObjProperty(caster, "#SpellMove");
			endif
			EraseObjProperty(caster, "#Casting");
			return 0;
		endif
        if (!cast_loc)
            return;
        endif
	endif

	var thecreature := "bladespirit";
	var thecritter := CreateNPCfromTemplate(thecreature, cast_loc.x, cast_loc.y,cast_loc.z);

	setobjproperty(thecritter, "summoned",1);
	setobjproperty(thecritter, "master",caster.serial);
	PlaySoundEffect(thecritter,SFX_SPELL_BLADE_SPIRIT);
	thecritter.setmaster( thecritter );

	var ev Array;
	ev.+type := 0x0002;
	ev.+source := 0;

	foreach critter in ListMobilesInLineOfSight( thecritter, 5 )
                ev.source := critter;
		SendEvent(thecritter, ev);
	endforeach
	
	var duration := Cint(GetEffectiveSkill( caster, SKILLID_MAGERY ) / 3);
	if( GetObjProperty( caster , CLASSEID_MAGE ) )
		duration := Cint( duration * CLASSE_BONUS );
	endif

	detach();

	sleep( duration );

	if (thecritter.x)
		PlaySoundEffect( thecritter , SFX_SPELL_BLADE_SPIRIT );
		PlayStationaryEffect( cint(thecritter.x), cint(thecritter.y), cint(thecritter.z), FX_SPELL_BLADE_SPIRIT, SPEED_SPELL_BLADE_SPIRIT , LOOP_SPELL_BLADE_SPIRIT );
		MoveObjectToLocation(thecritter,5288,1176,0,"britannia", MOVEOBJECT_FORCELOCATION);
		var count := 0;
		repeat
			SleepMS(1000);
			ApplyRawDamage( thecritter, GetMaxHP(thecritter) + 3 );
			count := count + 1;
		until(!thecritter || count >= 1000);
	endif

endprogram


