use uo;

include "include/spelldata";
include "include/client";
include "include/attributes";
include "include/random";

program reveal_hider ( parms, spell_id )

	var circle := 6;
	var caster;
	var fromhit;

	if (parms[1] == "#MOB")
		caster := parms[2];
		if (parms[4])
			circle := parms[4];
		endif
		if (parms[5])
			fromhit := parms[5];
		endif

	else
		caster := parms;
		// For scrolls, StartSpellScript isn't working >:(
		if (TypeOf(parms) == "Array")
			caster := parms[1];
			spell_id := parms[2];
		endif
		if (TryToCast( caster, spell_id ) != SUCCESS);
			EraseObjProperty(caster, "#Casting");
			return 0;
		endif
		if (!can_cast(caster, circle))
			return;
		endif
	endif

	/* var range := ModifyWithMagicEfficiency( caster , Cint(( magery / 10 ) - 5) ); */
	var mage  := GetObjProperty( caster , CLASSEID_MAGE );
	var magery := GetEffectiveSkill( caster , SKILLID_MAGERY  );
	var range := CInt( magery / 25 );
	if( mage )
		range := CInt( range * ClasseBonus(caster, CLASSEID_MAGE ));
	endif
	if (range < 1)
		range := 1;
	elseif(range > 10)
		range := 10;
	endif

	var hiders := ListMobilesNearLocationEx( caster.x , caster.y , caster.z , range , LISTEX_FLAG_HIDDEN, caster.realm );
	var numfound := 0;

	hiders := SmartAoE(caster, hiders);

	if(len(hiders) > 0)
		foreach mobile in hiders
			if( mobile.hidden and mobile.serial != caster.serial )

				var immunity := IsProtected( caster , mobile , circle, 1 );
			
				/* if( immunity == IMMUNED )
					continue;
				endif */
 			
				if(immunity == CURSED )
					magery := magery * 2;
					circle := circle * 2;
				endif
				
				if(Found( caster, mobile))
					numfound := 1;
					mobile.hidden := 0;
					PrintTextAbovePrivate( mobile , "You have been revealed!" , mobile );
					PrintTextAbovePrivate( mobile , "Ah ha!!" , caster );
					PlaySoundEffect(mobile, SFX_SPELL_REVEAL);
				endif
			endif
		endforeach
	endif
	if (!numfound)
		PrintTextAbovePrivate( caster , "You didn't find anyone." , caster );
 	endif

endprogram


function Found ( finder , hider )
	var finder_level := GetClasseLevel(finder);
	var hider_level := GetClasseLevel(hider);
	var finder_skill := GetEffectiveSkill( finder , SKILLID_MAGERY  );
	var hider_skill  := GetEffectiveSkill( hider , SKILLID_HIDING );
	var resist_skill := GetEffectiveSkill( hider , SKILLID_MAGICRESISTANCE );
    var highest;
	
    if ( GetObjProperty( hider, CLASSEID_THIEF ))
    	hider_skill := CInt( hider_skill * ClasseBonus(hider, CLASSEID_THIEF ));
    endif
	
    if ( GetObjProperty( hider, CLASSEID_MAGE ))
    	resist_skill := CInt( resist_skill * ClasseBonus(hider, CLASSEID_MAGE ));
    endif

    if (hider_skill > resist_skill)
    	highest := hider_skill;
    else
   		highest := resist_skill;
    endif
	
	var diceroll := RandomInt(100);
    var chance := Cint(finder_skill - (highest / 5));
	
	// Equal lvl == 50% chance.
	if(finder_level == hider_level)
		if( diceroll < chance / 1.5)
			if(DEBUG_MODE)
				PrintTextAbovePrivate( hider , "Equal Lvl. Result: Found! HiderLVL: " + hider_level + " FinderLVL: " + finder_level + " Roll= " + diceroll + " Chance= " + chance/1.5, hider );
			endif
			return 1;
		else
			if(DEBUG_MODE)
				PrintTextAbovePrivate( hider , "Equal Lvl. Result: Hidden! HiderLVL: " + hider_level + " FinderLVL: " + finder_level + " Roll= " + diceroll + " Chance= " + chance/1.5, hider );
			endif
			return 0;
		endif
	// Lvl 5+ mage detecting hider with 1 level difference.
	elseif(finder_level > 4 && hider_level > 4)
		if( diceroll < chance / 2)
			if(DEBUG_MODE)
				PrintTextAbovePrivate( hider , "Calc Lvl >4. Result: Found! HiderLVL: " + hider_level + " FinderLVL: " + finder_level + " Roll= " + diceroll + " Chance= " + chance/2, hider );
			endif
			return 1;
		else
			if(DEBUG_MODE)
				PrintTextAbovePrivate( hider , "Calc Lvl >4. Result: Hidden! HiderLVL: " + hider_level + " FinderLVL: " + finder_level + " Roll= " + diceroll + " Chance= " + chance/2, hider );
			endif
			return 0;
		endif
	// Finder is higher level than hider and both finder and hider levels are below 5.
	elseif((finder_level > hider_level) && (finder_level < 5 || hider_level < 5))
		if( diceroll < chance )
			if(DEBUG_MODE)
				PrintTextAbovePrivate( hider , "Calc Lvl <5. Result: Found! HiderLVL: " + hider_level + " FinderLVL: " + finder_level + " Roll= " + diceroll + " Chance= " + chance, hider );
			endif
			return 1;
		else
			if(DEBUG_MODE)
				PrintTextAbovePrivate( hider , "Calc Lvl <5. Result: Hidden! HiderLVL: " + hider_level + " FinderLVL: " + finder_level + " Roll= " + diceroll + " Chance= " + chance, hider );
			endif
			return 0;
		endif
	// Hider is higher level than finder and both finder and hider levels are below 5.
	elseif((finder_level < hider_level) && (finder_level < 5 || hider_level < 5))
		if( diceroll < chance / 3)
			if(DEBUG_MODE)
				PrintTextAbovePrivate( hider , "Calc Lvl <5. Result: Found! HiderLVL: " + hider_level + " FinderLVL: " + finder_level + " Roll= " + diceroll + " Chance= " + chance/3, hider );
			endif
			return 1;
		else
			if(DEBUG_MODE)
				PrintTextAbovePrivate( hider , "Calc Lvl <5. Result: Hidden! HiderLVL: " + hider_level + " FinderLVL: " + finder_level + " Roll= " + diceroll + " Chance= " + chance/3, hider );
			endif
			return 0;
		endif
	// Finder is higher than lvl 5 and hider is below lvl 5 or both are classless. 5% chance.
	else
		if( diceroll < 5)
			if(DEBUG_MODE)
				PrintTextAbovePrivate( hider , "FINAL ELSE. Result: Found! HiderLVL: " + hider_level + " FinderLVL: " + finder_level + " Roll= " + diceroll + " Chance= 5", hider );
			endif
			return 1;
		else
			if(DEBUG_MODE)
				PrintTextAbovePrivate( hider , "FINAL ELSE. Result: Hidden! HiderLVL: " + hider_level + " FinderLVL: " + finder_level + " Roll= " + diceroll + " Chance= 5", hider );
			endif
			return 0;
		endif
	endif
 
endfunction
