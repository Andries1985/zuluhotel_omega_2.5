use uo;
use os;

include "include/client";
include "include/dotempmods";
include "include/classes";
include "include/random";
include "include/res";
include "include/attributes";
include "include/difficulty";

const SOUND_EFFECT_RES 	  := 0x215;
const ACTION_EFFECT_CAST2 := 0x11;
const BLOODY_BANDAGE 	  := 0x0e20;

//To heal
const BANDAGES_TO_HEAL	  := 1;
const DELAY_TO_HEAL	  := 5;

//To cure
const BANDAGES_TO_CURE	  := 2;
const DELAY_TO_CURE	  := 6;

//To res
const BANDAGES_TO_RES	  := 5;
const DELAY_TO_RES	  := 10;
const RES_DIFFICULTY	  := 105;

//Delay multiplier when you heal yourself
const DELAY_MULT_FOR_SELF := 1;

//Multiply diff by this for the point value
const POINTS_MULTIPLIER	  := 15;

//Delay between usages
const DELAY_BETWEEN_BANDAGE	:= 5;

function CheckIfCanUseBandage( character )

var healcd := Cint(GetObjProperty(character , "#magicfish"));
var bandcd := Cint(GetObjProperty(character , "#usebandage"));

	if( healcd && healcd > ReadGameClock())
		if( bandcd &&  bandcd > ReadGameClock())
        	SendSysmessage(character , "You must wait until you can use a bandage!");
        	return 0;
		endif
        SendSysmessage(character , "You've eaten a magic fish recently so you cannot use a bandage yet.");
        return 0;
    else
        SetObjProperty(character , "#usebandage" , ReadGameClock() + DELAY_BETWEEN_BANDAGE);   
        return 1;
    endif
endfunction

program use_bandages( character , bandages )

	var lacedbandages := GetObjProperty(bandages, "Poisoned");

	if(!ReserveItem(bandages))
		return;
	endif

    // Check if you can use a bandage.
    if(!CheckIfCanUseBandage(character))
		return;
	endif

	if (GetObjProperty(bandages, "Poisoned") && !IsThief(character))
		SendSysMessage(character, "Your fingers burn handling the bandages, you feel it's best not to use them...");
		return 0;
	endif

	var withheal := { "Giantkin"	,
			    "Orc"	,
			    "Troll"	,
			    "Human"	};

	var withvet := { "Animal"	,
			   "Dragonkin"	,
			   "Ratkin"		};

	SendSysmessage( character, "Who would you like to heal?" );
	var patient := Target( character , TGTOPT_HELPFUL + TGTOPT_CHECK_LOS );

	//Targeting was canceled
	if( !patient )
		return;
	endif

	//The patient is too far
	if( Distance( character , patient ) > 2 )
		SendSysMessage( character , "The patient is too far." );
		return;
	endif

	// classed rangers may heal themselves and res animals
	if (GetObjProperty(character, "IsRanger"))
		if (patient == character)
			var parms := {};
			parms[1] := character;
			parms[2] := patient;
			parms[3] := bandages;
			Start_Script( ":veterinary:vet" , parms );
			return;
		endif

		if (patient.objtype == UOBJ_CORPSE)
			var type := GetObjProperty( patient , "Type" );
			if( type in withvet )
				var parms := {};
				parms[1] := character;
				parms[2] := patient;
				parms[3] := bandages;
				Start_Script( ":veterinary:vet" , parms );
				return 0;
			endif
		endif

	// classed thieves use a special cure, utilising poison as the main antidote and healant
	elseif (GetObjProperty(character, "IsThief") && lacedbandages)
		if (character == patient && character.poisoned)
			ThiefTryToCure(character, bandages);
			return 0;
		elseif (character == patient)
			ThiefHeal(character, bandages);
			return 0;
		else
			SendSysMessage( character ,"You can only use laced bandages on yourself." );
			return 0;
		endif
	endif

	//The target isn't a mobile
	if( !patient.isa(POLCLASS_MOBILE) && patient.objtype != UOBJ_CORPSE )
		SendSysMessage( character , "You can't heal that." );
		return;
	endif

	if( (patient.graphic != CID_HUMAN_MALE and patient.graphic != CID_HUMAN_FEMALE and patient.npctemplate) )
		var type := GetObjProperty( patient , "Type" );
		if( type in withheal )
			if( patient.poisoned )
				TryToCure( character , patient , bandages );
				return;
			elseif( GetHP(patient) < GetMaxHP(patient) )
				TryToHeal( character , patient , bandages );
				return;
			else
				SendSysMessage( character ,"This patient don't even have a bruise!" );
				return;
			endif

		elseif( type in withvet )
			var parms := {};
			parms[1] := character;
			parms[2] := patient;
			parms[3] := bandages;
			Start_Script( ":veterinary:vet" , parms );
			return;
		else
			SendSysmessage( character , "This creature can't be healed" );
			return;
		endif
	else
		//The target is a dead char
		if( !patient.isa(POLCLASS_MOBILE))
			SendSysMessage( character , "You can't heal that." );
			return;
		elseif( patient.dead)
			TryToRes( character , patient , bandages );
			return;
		elseif( patient.poisoned )
			TryToCure( character , patient , bandages );
			return;
		elseif( GetHP(patient) < GetMaxHP(patient) )
			TryToHeal( character , patient , bandages );
			return;
		else
			SendSysMessage( character ,"This patient doesn't even have a bruise!" );
			return;
		endif
	endif

	ReleaseItem( bandages );

endprogram


function TryToCure( character , patient , bandages )

	if( bandages.amount < BANDAGES_TO_CURE )
		SendSysMessage( character , "You don't have enough bandages." );
		return;
	endif

	var delay 	:= DELAY_TO_CURE;

	if( patient.serial == character.serial )
		delay := Cint( delay * DELAY_MULT_FOR_SELF );
		SendSysMessage( character , "You start to cure yourself" );
	else
		SendSysMessage( character , "You start to cure " + patient.name );
	 	SendSysMessage( patient , character.name + " starts to cure you" );
	endif

	var plvl 	:= PoisonLevel( patient );
	var diff 	:= plvl * 20 + 15;
	var points 	:= diff * POINTS_MULTIPLIER;

	sendDiff( character , diff);

	Sleep( delay );

	if( Distance( character , patient ) > 2 )
		SendSysMessage( character , "Your patient is too far." );
		return;
	endif

	if( character.dead )
		return;
	endif

	if( patient.dead )
		SendSysMessage( character , "Your patient is dead." );
	endif

	if( CheckSkill( character , SKILLID_HEALING , diff , points ) )
		CurePoison( patient , 0 , character.name + " has cured you!" );
		SendSysmessage( character , "You cured your patient." );
	else
		SendSysmessage( character , "You couldn't cure your patient." );
	endif

	SubtractAmount( bandages , BANDAGES_TO_CURE );
	CreateItemInBackpack( character , BLOODY_BANDAGE , BANDAGES_TO_CURE );

endfunction


function TryToHeal( character , patient , bandages )

	if( bandages.amount < BANDAGES_TO_HEAL )
		SendSysMessage( character , "You don't have enough bandages." );
		return;
	endif

	var delay 	:= DELAY_TO_HEAL;
	var healing	:= Cint( GetEffectiveSkill( character , SKILLID_HEALING ) / 10 );
	var anatomy	:= Cint( GetEffectiveSkill( character , SKILLID_ANATOMY ) / 5 );
	var healed	:= RandomDiceStr( healing + "d4+" + healing ) + RandomDiceStr( "1d8+2" ) + anatomy;
	var healingskill := GetEffectiveSkill( character , SKILLID_HEALING );

	// percent to heal is the percent of health that the thing needs healing
	// so if its on 80/100HP this will be 20% needed to heal
	var percent_to_heal := CDbl(GetHP(patient))/CDbl(GetMaxHP(patient))*100.00;
	percent_to_heal := CInt(100.0 - percent_to_heal);

	//% the player is to capping vet (130 not 150)
	var healskillper := CInt((healingskill/130.0)*100.0);

	if( patient.serial == character.serial )
		delay := Cint( delay * DELAY_MULT_FOR_SELF );
		SendSysMessage( character , "You start to heal yourself." );
	else
		SendSysMessage( character , "You start to heal " + patient.name );
	 	SendSysMessage( patient , character.name + " starts to heal you" );
	endif

	if( GetObjProperty( character , CLASSEID_WARRIOR ) )
		healed := Cint( healed * ClasseBonus( character , CLASSEID_WARRIOR ) );

	elseif( GetObjProperty( character , CLASSEID_CLERIC ) )
		healed := Cint( healed * ClasseBonus( character , CLASSEID_CLERIC ) );

	endif

	var count	:= 10;
	var shp	:= GetHp(Character);
	while( delay )
		Sleep( 1 );
		delay := delay - 1;
		if( GetHP(character) < shp )
			SendSysMessage( character , "Your fingers slip..." );
			count := count - 1;
			shp   := GetHP(character);
		endif
	endwhile

	if( Distance( character , patient ) > 2 )
		SendSysMessage( character , "Your patient is too far." );
		return;
	endif

	if( character.dead )
		return;
	endif

	if( patient.dead )
		SendSysMessage( character , "Your patient is dead." );
	endif

	var diff 	:= GetMaxHP(patient) - GetHP(patient); //patient.maxhp - patient.hp;
	var points 	:= diff * POINTS_MULTIPLIER;

	var bonus := GetObjProperty( patient , "HealingIncrease" );
	if( bonus )
		healed := healed + Cint( healed * bonus * 0.1 );
	endif

	if( count < 1 )
		count := 1;
	endif

	healed := Cint( healed * count / 10 );

	if( CheckSkill( character , SKILLID_HEALING , diff , points ) )
		HealDamage( patient , healed );
		SendSysMessage( character , "You healed " + healed + " damage." );
	if( character != patient )
		SendSysmessage( patient , character.name + " healed " + healed + " damage." );
	endif

	// Second check against % TO heal and vet skill % to max.  So if an npc has 1k max hp and is on 500hp, he has
	// 50% to heal.  If players skill is 100 he will be able to heal it
	elseif ((healskillper >= percent_to_heal) && CheckSkill( character , SKILLID_HEALING , (healingskill-10) , CInt((healingskill/2)*POINTS_MULTIPLIER) ) )
			// players total heal skill perecnt is greater or equal to damage needed healing, HEAL
			HealDamage( patient , healed );
			SendSysMessage( character , "You healed " + healed + " damage." );
			if (character != patient)
				SendSysmessage( patient , character.name + " healed " + healed + " damage." );
			endif

	// Toadstool -  If first check fails, decrease difficulty and points gained by 2.5
	// 		This will help people healing with a greater than 130 damage gap

	elseif(CheckSkill( character, SKILLID_HEALING, CInt(diff/2.5), CInt(points/2.5) ) )
		healed:=Cint(healed/2.5);
		HealDamage( patient, healed );
		SendSysMessage( character, "You healed " +healed + " damage." );
		SendSysMessage( patient, character.name + " healed " + healed + " damage." );
	else
		SendSysmessage( character , "You couldn't heal your patient." );
	endif

	SubtractAmount( bandages , BANDAGES_TO_HEAL );
	CreateItemInBackpack( character , BLOODY_BANDAGE , BANDAGES_TO_HEAL );

endfunction


function TryToRes( character , patient , bandages )

	var anatomy := GetEffectiveSkill( character , SKILLID_ANATOMY );
	var healing := GetEffectiveSkill( character , SKILLID_HEALING );

	if( anatomy < 90 or healing < 90 )
		SendSysmessage( character , "You need atleast 90 anatomy and 90 healing to resurrect someone.");
		SendSysMessage( character , "You don't have enough skill to resurrect someone." );
	 	return;
	endif

	if( bandages.amount < BANDAGES_TO_RES )
		SendSysMessage( character , "You don't have enough bandages." );
		return;
	endif

	SendSysMessage( character , "You try to bring back " + patient.name + " to life." );
	SendSysMessage( patient , character.name + " is trying to bring you back to life." );
	sendDiff( character , RES_DIFFICULTY);

	var delay := DELAY_TO_RES;

	Sleep( delay );

	if( Distance( character , patient ) > 2 )
		SendSysMessage( character , "Your patient is too far." );
		return;
	endif

	if( character.dead )
		return;
	endif

	if( !patient.dead )
		SendSysMessage( character , "Your patient is live already." );
	 	return;
	endif
	if(character.multi || patient.multi)
		SendSysmessage( character , "You couldn't resurrect your patient." );
	elseif( CheckSkill( character , SKILLID_HEALING , RES_DIFFICULTY , RES_DIFFICULTY * POINTS_MULTIPLIER ) )
		ResurrectMobile( patient , character );
		PlaySoundEffect( patient , SOUND_EFFECT_RES );
		SendSysmessage( character , "You bring your patient back to life!" );
		SendSysMessage( patient , character.name + " brough you back to life!" );
	else
		SendSysmessage( character , "You couldn't resurrect your patient." );
	endif

	SubtractAmount( bandages , BANDAGES_TO_RES );
	CreateItemInBackpack( character , BLOODY_BANDAGE , BANDAGES_TO_RES );

endfunction


function ThiefHeal(who, bandages)

	var pznlevel := GetObjProperty(bandages, "Poisoned");
	var skilltotal := GetClasseSkillTotal(who,GetClass(who)) / 8;
	var delay 	:= DELAY_TO_HEAL;
	var healing	:= skilltotal / 12;
	var healed	:= RandomDiceStr( healing + "d2+" + healing ) + RandomDiceStr( "1d6+2" ) + healing;
	// percent to heal is the percent of health that the thing needs healing
	// so if its on 80/100HP this will be 20% needed to heal
	var percent_to_heal := CDbl(GetHP(who))/CDbl(GetMaxHP(who))*100.00;
	percent_to_heal := CInt(100.0 - percent_to_heal);
	//% the player is to capping poisoning (130 not 150)
	var healskillper := CInt((skilltotal/130.0)*100.0);

	if( bandages.amount < BANDAGES_TO_HEAL )
		SendSysMessage( who , "You don't have enough bandages to heal yourself." );
		return 0;
	endif
	
	if(!pznlevel)
		SendSysMessage(who, "You must lace the bandages with poison before using them.");
		return 0;
	endif

	if(who.poisoned)
		ThiefTryToCure( who , bandages );
		return 0;
	endif

	if(GetHP(who) >= GetMaxHP(who))
		SendSysMessage(who, "You don't have any wounds to bandage!");
		return 0;
	endif

	delay := Cint( delay * DELAY_MULT_FOR_SELF );
	SendSysMessage( who , "You start to heal yourself." );

	var count	:= 10;
	var shp	:= GetHp(who);
	while( delay )
		Sleep( 1 );
		delay := delay - 1;
		if( GetHP(who) < shp )
			SendSysMessage( who , "Your fingers slip..." );
			count := count - 1;
			shp   := GetHP(who);
		endif
	endwhile

	if( who.dead )
		return;
	endif

	var diff 	:= GetMaxHP(who) - GetHP(who);
	var bonus := GetObjProperty( who , "HealingIncrease" );
	if( bonus )
		healed := healed + Cint( healed * bonus * 0.1 );
	endif

	if( count < 1 )
		count := 1;
	endif

	healed := Cint( healed * count / 10 );

	if( (skilltotal-RandomInt(3)+RandomInt(5)) >= diff )
		HealDamage( who , healed );
		SendSysMessage( who , "You healed " + healed + " damage." );

	elseif ((healskillper >= percent_to_heal) )
		// players total heal skill perecnt is greater or equal to damage needed healing, HEAL
		HealDamage( who , healed );
		SendSysMessage( who , "You healed " + healed + " damage." );

	elseif((skilltotal-RandomInt(3)+RandomInt(5)) >= diff/2.5)

		healed:=Cint(healed/2.5);
		HealDamage( who, healed );
		SendSysMessage( who, "You healed " +healed + " damage." );

	else
		SendSysmessage( who , "You couldn't heal yourself." );
		SubtractAmount( bandages , BANDAGES_TO_HEAL );
		CreateItemInBackpack( who , BLOODY_BANDAGE , BANDAGES_TO_HEAL );
		return 0;
	endif

	SubtractAmount( bandages , BANDAGES_TO_HEAL );
	CreateItemInBackpack( who , BLOODY_BANDAGE , BANDAGES_TO_HEAL );
	Start_Script(":healing:poison_heal", {who, pznlevel});

endfunction


function ThiefTryToCure( character, bandages )

	if( bandages.amount < BANDAGES_TO_CURE )
		SendSysMessage( character , "You don't have enough laced bandages." );
		return;
	endif

	var delay 	:= Cint( DELAY_TO_CURE * DELAY_MULT_FOR_SELF );
	var plvl 	:= PoisonLevel( character );
	var diff 	:= plvl * 20 + 15;
	var points 	:= (diff * POINTS_MULTIPLIER)/2;

	SendSysMessage( character , "You start to cure yourself!" );

	Sleep( delay );

	if( character.dead )
		return;
	endif

	if( character.dead )
		SendSysMessage( character , "Your dead." );
	endif

	if( CheckSkill( character , SKILLID_POISONING , diff , points ) )
		CurePoison( character , 0 , " You've cured yourself!" );
		SendSysmessage( character , "You've cured yourself!" );
	else
		SendSysmessage( character , "You couldn't cure yourself." );
	endif

	SubtractAmount( bandages , BANDAGES_TO_CURE );
	CreateItemInBackpack( character , BLOODY_BANDAGE , BANDAGES_TO_CURE );

endfunction