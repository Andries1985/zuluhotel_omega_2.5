use uo;
use os;

include "include/spelldata";
include "include/classes";
include "include/client";
include "include/dotempmods";

const SPELL_EFFECT_TYPE_MOVING 	:= MOVING_SPELL_SORCERERS_BANE;
const SPELL_EFFECT_ID		:= FX_SPELL_SORCERERS_BANE;
const SPELL_EFFECT_SPEED	:= SPEED_SPELL_SORCERERS_BANE;
const SPELL_EFFECT_LOOP		:= LOOP_SPELL_SORCERERS_BANE;


program sorcerersbane( parms )

	var circle := GetCircle( SPELLID_SORCERERS_BANE );
	var element1 := FIRE;
	var element2 := WATER;
	var caster;
	var cast_on;
	var fromhit;

	if (parms[1] == "#MOB")
		caster := parms[2];
        if(IsInSafeArea(caster))
            return;
        endif
		cast_on := parms[3];
		if (parms[4])
			circle := parms[4];
		endif
		if (parms[5])
			fromhit := parms[5];
		endif

	else
		caster := parms;
        if(IsInSafeArea(caster))
            SendSysMessage(caster, "This spell can not be cast here.");
			EraseObjProperty( caster , "#Casting" );
            return;
        endif
		var result := TryToCast( caster, SPELLID_SORCERERS_BANE );
		if( result != SUCCESS )
			if( result == NO_SKILL )
				BurnSelf( caster , circle );
			endif
			
			EraseObjProperty( caster , "#Casting" );
			return;
		endif
		SendSysmessage( caster , "Select a target." );
		cast_on := CanTargetSpell( caster , circle , TGTOPT_CHECK_LOS + TGTOPT_HARMFUL );
		if( !cast_on )
			EraseObjProperty( caster , "#Casting" );
			return;
		endif
	endif
	
	if( !fromhit )
		EraseObjProperty( caster , "#Casting" );
		cast_on := Reflected( caster , cast_on , circle );
	endif
	
	PlayMovingEffect(caster, cast_on, SPELL_EFFECT_ID, SPELL_EFFECT_SPEED, SPELL_EFFECT_LOOP, explode := 0);
	PlaySoundEffect( cast_on , SFX_SPELL_SORCERERS_BANE );
	
	var immunity := IsProtected( caster , cast_on , circle );
	
	if( immunity == IMMUNED )
		return;
	endif

	if( immunity == CURSED )
		circle := circle * 2;
	endif
	
	var dmg := CalcSpellDamage( caster ,cast_on , circle );
	ApplyElementalDamage( caster , cast_on , circle , Cint( dmg / 2 ) , element1 );
	
	var stolen := Resisted( caster , cast_on , circle , ModifyWithMagicEfficiency( caster , GetMana(cast_on) ) );
	stolen := Cint( stolen / ClasseBonus( cast_on , CLASSEID_MAGE ) );

	if(caster.isa(POLCLASS_NPC))
		stolen := stolen/2;
	endif

	var wProt := GetProtLevel(cast_on, element2);
	if(wProt)
		wProt := CDbl(wProt);
		wProt := wProt / 100;
		wProt := 1.00 - wProt;
		stolen := stolen*wProt;
		stolen := CInt(stolen);
		if(stolen < 0)
			stolen := 0;
		endif
	endif

	if( stolen > GetMana(cast_on) )
		stolen := GetMana(cast_on);
	endif
	SetMana(cast_on, (GetMana(cast_on)-stolen));

	var stolenMana := GetMana(caster) + stolen;
	if( stolenMana > GetMaxMana(caster) )
		stolenMana := GetMaxMana(caster);
	endif
	SetMana(caster, stolenMana);
	
	Sleepms( 500 );
	
	PlaySoundEffect( caster , SFX_SPELL_SUMMON_ELEMENTAL );
	var x := cast_on.x;
	var y := cast_on.y;
	var z := cast_on.z;
	var cRealm := cast_on.realm;

	if(!cast_on)
		return;
	endif

	var wavetop1 := CreateItemAtLocation( cint(x) , cint(y) , cint(z+110) , 0x350b , 1, cRealm );
	var wavetop2 := CreateItemAtLocation( cint(x) , cint(y) , cint(z+110) , 0x34ed , 1, cRealm );
	wavetop1.movable := 0;
	wavetop2.movable := 0;

	var i;
	
	var waterfall_array := {};
	var waterfall_base := {};

	for(i := 10; i >= 0; i := i - 1)
		PlayStationaryEffect( cint(x), cint(y), cint(z+i*10), 0x3517, 0, 0, 0, cRealm );
		PlayStationaryEffect( cint(x), cint(y), cint(z+i*10), 0x34f9, 0, 0, 0, cRealm );
		sleepms( 50 );
	endfor
	
	PlayStationaryEffect( cint(x), cint(y+1), cint(z), 0x17a1, 0, 0, 0, cRealm );
	PlayStationaryEffect( cint(x+1), cint(y), cint(z), 0x179d, 0, 0, 0, cRealm );
	PlayStationaryEffect( cint(x), cint(y-1), cint(z), 0x179f, 0, 0, 0, cRealm );
	PlayStationaryEffect( cint(x-1), cint(y), cint(z), 0x17a3, 0, 0, 0, cRealm );
	PlayStationaryEffect( cint(x+1), cint(y+1), cint(z), 0x17a7, 0, 0, 0, cRealm );
	PlayStationaryEffect( cint(x-1), cint(y+1), cint(z), 0x17a8, 0, 0, 0, cRealm );
	PlayStationaryEffect( cint(x+1), cint(y-1), cint(z), 0x17a5, 0, 0, 0, cRealm );
	PlayStationaryEffect( cint(x-1), cint(y-1), cint(z), 0x17a6, 0, 0, 0, cRealm );
	PlayStationaryEffect( cint(x), cint(y), cint(z), 0x1797, 0, 0, 0, cRealm );
	
	PlaySoundEffect(caster, 0x11);
	
	ApplyElementalDamage( caster , cast_on , circle , Cint( dmg / 2 ) , element2 );
	
	Sleep( 5 );

	DestroyItem (wavetop1);
	DestroyItem (wavetop2);

	foreach waterfall_tile in waterfall_array
		DestroyItem( waterfall_tile );
		Sleepms( 25 );
	endforeach

	Sleep( 5 );
	
	foreach part in waterfall_base
		DestroyItem( part );
	endforeach
	
endprogram
