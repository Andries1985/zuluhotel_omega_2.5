///////////////////////////////////////////////////////
//
// More stuff is in explode_corpse.src
//
///////////////////////////////////////////////////////

use uo;
use os;

include "include/attributes";
include "include/classes";
include ":versebook:include/versefunctions";
include ":versebook:include/verseconstants";

var stamina, diff, skills, element, instrument, musicianship, name;
var BASE_DAMAGE := 40;

// How many seconds between damage
var DAMAGE_LOOP := 2;

program Corpse_Distention(parms)

	// Sent with the song_id (a number like spellid)
	var who := parms[1];
	var song_id := parms[2];

	Attach(who);

	// Checks rules for playing the particular song, class, stamina skills, instrunment
	// Returns cfg info for song to save processing power
	var can_play := CanPlay(who, song_id);
	if (!can_play)
		return 0;
	else
		stamina := can_play[1];
		diff := can_play[2];
		skills := can_play[3];		 // array of skill_ids to base verse on
		element := can_play[4];		 // array of elements to base damage on
		instrument := can_play[5];	 // Item ref to music instrument found
		musicianship := can_play[6]; // The players music SKILL level
		name := can_play[7];		 // The name of the song
	endif

	// Atm we don't allow bards to move, if they lose hp, stop
	var x := who.x;
	var y := who.y;
	var hp := GetHP(who);

	var last_played := ReadGameClock(); // Used JUST for the playing sound, does a check against music skill too

	// All skill checks are done in here
	if (!SucceedPlayingVerse(who, skills, diff, instrument, name))
		return 0;
	endif

	// Calculate the range, damage, and specify the loop var, as well as hit var
	var range := GetVerseRange(who, musicianship);
	var damage := CalculateBardicDamage(who, skills, diff, BASE_DAMAGE);

	var i := DAMAGE_LOOP;
	var hit;

	// ------------- The looping main effect of the song ------------ \\
	repeat

		// Only play the sound effect every 7 seconds, as the song is 6.2 secs long. This is skipped the first time
		if (ReadGameClock() >= last_played)
			if (!PlayBardicMusic(who, diff, instrument))
				return 0;
			endif
			last_played := ReadGameClock()+7;
		endif

		// set hit to 0 again
		hit := 0;
		if ( i == DAMAGE_LOOP)
			foreach corpse in ListItemsNearLocationOfType( who.x, who.y, who.z, range, 8198, who.realm )
				if ( CheckLineOfSight( who,corpse))
					hit := 1;
					if (ConsumeBardStamina(who, stamina, 1))
						BloatCorpse(who, corpse, damage);
					else
						break;
					endif
				endif
			endforeach
			i := 0;
			
			// No-one was hit, use half stamina
			if (hit == 0)
				ConsumeBardStamina(who, stamina, 0);
			endif
			
		endif

		i := i + 1; 
		
		sleep(1);

	until ( InterruptedPlaying(who, x, y, stamina, hp) );

endprogram

// No point putting this in functions
function BloatCorpse(who, corpse, damage)

	set_critical(1);
	var bloat := GetObjProperty(corpse, "Bloat");

	if (!bloat)	

		if (NotSuitable(corpse))
			return 0;
		endif
		
		SetObjProperty(corpse, "TrueColour", corpse.color);
		
		Start_Script(":versebook:deflate_corpse", corpse);
		bloat := 0;
	endif
	set_critical(0);

	bloat := bloat + damage;
	SetObjProperty(corpse, "Bloat", bloat);

	if (bloat >= 100)
		if (!GetObjProperty(corpse, "#Explode"))
			SetObjProperty(corpse, "#Explode", 1);
			Start_Script(":versebook:explode_corpse", {who, corpse, damage, element});
		endif
		return 1;
	endif

	set_critical(1);

	var oldcolour := corpse.color;

	if (bloat > 85)
		corpse.color := 32;
	elseif (bloat > 70)
		corpse.color := 33;
	elseif (bloat > 65)
		corpse.color := 37;
	elseif (bloat > 50)
		corpse.color := 38;
	elseif (bloat > 35)
		corpse.color := 39;
	elseif (bloat > 20)
		corpse.color := 40;
	elseif (bloat > 0)
		corpse.color := 41;
	endif

	if (oldcolour != corpse.color)
		PrintTextAbove(corpse, "*bloat*");
	endif

	set_critical(0);

endfunction

function NotSuitable(corpse)

	// all npc corpses are fine
	if (GetObjProperty(corpse, "npctemplate"))
		return 0;
	endif

	var no;
	foreach item in EnumerateItemsInContainer(corpse)
		if (item.objtype != 7939 && (item.tile_layer != 0x0b&& item.tile_layer != 0x10))
			return 1; // don't blow corpse
		endif
	endforeach

	return 0; // blow it!

endfunction