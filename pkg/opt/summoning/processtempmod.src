use uo;
use os;
use vitals;

include "include/attributes";
include "include/spelldata";
include "include/dotempmods";
include "include/classes";

program processtempmods( parms )

	set_script_option( SCRIPTOPT_CAN_ACCESS_OFFLINE_MOBILES , 1 );
	
	var who				:= parms[1];
	var stat			:= parms[2];
	var amt				:= Cint(parms[3]);
	var duration		:= Cint(parms[4]);
	var liche 			:= 0;
	var casterismage 	:= GetObjProperty( who, CLASSEID_MAGE );

	if(len(parms) >= 5)
		liche := parms[5];
	endif
		
	if( (!who.poisoned) )
		// this person should not be poisoned
		if ( GetHpRegenRate(who) != BaseRegenRate(who) )
			SetHpRegenRate( who,  Cint(BaseRegenRate( who ) ));
			who.setPoisoned(0);
		endif
	endif
	
	Set_Critical(1);
	var allmods	:= GetObjProperty( who , "#mods" );
	if (!allmods)
		allmods := {};
	endif
	
	var mmod := {};
	mmod[1] := stat;
	mmod[2] := amt;
	mmod[3] := ReadGameClock() + duration;
	mmod[4] := liche;

	var pos := AddToStatMods( allmods , mmod );
	if( !pos )
		return;
	endif

	case( mmod[1] )
		"cstr":
		"str" : SetStrengthMod( who, GetStrengthMod(who)+ mmod[2]);
				if(mmod[2] > 0)
					BuffOn(who, "strength", amt, duration);
				else
					BuffOn(who, "weaken", amt, duration);
				endif
        	
		"cdex":
		"dex" : SetDexterityMod( who, GetDexterityMod(who)+ mmod[2]);
				if(mmod[2] > 0)
					BuffOn(who, "agility", amt, duration);
				else
					BuffOn(who, "clumsy", amt, duration);
				endif
        	
		"cint":
		"int": 	SetIntelligenceMod( who, GetIntelligenceMod(who)+ mmod[2]);
				if(mmod[2] > 0)
					BuffOn(who, "cunning", amt, duration);
				else
					BuffOn(who, "feeblemind", amt, duration);
				endif
        	
		"car":
		"ar": 	who.ar_mod := who.ar_mod + mmod[2];
				BuffOn(who, "protection", amt, duration);
        	
		"p":	who.SetParalyzed();
				BuffOn(who, "paralyze", amt, duration);
		
		"call":
		"all": 
				SetStrengthMod( who, GetStrengthMod(who)+ mmod[2]);
				SetDexterityMod( who, GetDexterityMod(who)+ mmod[2]);
				SetIntelligenceMod( who, GetIntelligenceMod(who)+ mmod[2]);
				if(mmod[2] > 0)
					BuffOn(who, "bless", amt, duration);
				else
					BuffOn(who, "curse", amt, duration);
				endif

		"cebless":
		"ebless": 
				SetStrengthMod( who, GetStrengthMod(who)+ mmod[2]);
				if(!casterismage)
					SetDexterityMod( who, GetDexterityMod(who)+ mmod[2]);
				else
					SetDexterityMod( who, GetDexterityMod(who)+ (mmod[2]*0.4));
				endif
				SetIntelligenceMod( who, GetIntelligenceMod(who)+ mmod[2]);
				if(mmod[2] > 0)
					BuffOn(who, "bless", amt, duration);
				else
					BuffOn(who, "curse", amt, duration);
				endif

		"cpoly":
		"poly":
				if(!liche)
					SetStrengthMod( who, GetStrengthMod(who)+ mmod[2]);
					//if(!casterismage)
					//	SetDexterityMod( who, GetDexterityMod(who)+ mmod[2]);
					//else
					//	SetDexterityMod( who, GetDexterityMod(who)+ mmod[2]*0.1);
					//endif
					SetIntelligenceMod( who, GetIntelligenceMod(who)+ mmod[2]);
					who.ar_mod := who.ar_mod + cint(mmod[2] / 3 );
				else
					SetStrengthMod( who, GetStrengthMod(who)+ mmod[2]);
					//SetDexterityMod( who, GetDexterityMod(who)+ (mmod[2]) );
					SetIntelligenceMod( who, GetIntelligenceMod(who)+ mmod[4]);
				endif
				BuffOn(who, "polymorph", amt, duration);
	endcase
	IncRevision(who);
	SetObjProperty( who , "#mods" , allmods );
	//Set_Critical(0);
	
	/*detach();
	Sleep(duration);
	
	if( who )
		Set_Critical(1);
		allmods := GetObjProperty( who , "#mods" );
	
		if( !allmods )
			Set_Critical( 0 );
			return;
		endif
	
		var newmods := {};
		var i;
		for( i := 1 ; i <= len(allmods) ; i := i + 1 )
			if( allmods[i][1] == mmod[1] and ReadGameClock() >= allmods[i][3] )
				UndoTheMod( who , allmods[i][1] , allmods[i][2] );
			else	
				newmods.append( allmods[i] );
			endif
		endfor
	
		if( len(newmods) )
			SetObjProperty( who , "#mods" , newmods );
		else
			EraseObjProperty( who , "#mods" );
		endif
	
		Set_Critical( 0 );
	endif*/
	
endprogram