//////////////////////////////////////////////////
//
// NOTE!!! THis is compiled for 093 so has to 
// be edited to work. I only needed it to convert
// from 093 to 098, changing this would be easy
//
//
//
//

use uo;
use os;
use datafile;
use cfgfile;

include "include/attributes";

var itemcount := 1;
set_script_option( 4, 1 );

program convertworld( who )
/* 		BACK UP CHARACTERS

Note: Only characters skills, stats, and hair type (not colour) is saved.
They are arranged in elements named after their account name.
I am COPYING the entire accounts folder across, am NOT remaking the 
accounts seperately. This is entirerly possible, but you will need
to set a new pword for every account if you remake it.

*/

/*
var file := OpenDataFile(":convertworld:characters");

if (!file)
	CreateDataFile( ":convertworld:characters");
	file := OpenDataFile(":convertworld:characters");
endif

// First we convert characters
var accounts := ListAccounts();
var currentelement;
var playercounter := 0;


foreach account in accounts

	// name the element the account name
	currentelement := file.CreateElement(account);
	account := FindAccount(account);

	var i := 0;
	var y := 0;
	var info := struct;
	var player, hair, beard;
	var skillarray := {};

	repeat
		player := account.getcharacter(i);

		if (player)
		
			var items := ListEquippedItems(player);

			foreach item in items
				var temp := GetObjProperty( item, "skilladv" );
				if( temp != error )
				var skillnum := Cint( temp );
				var rawskill := Cint(GetRawSkill(player, skillnum));
				var amount := Cint(GetObjProperty(player, "advamount" + skillnum + "s" + item.serial));
				if( amount > rawskill )
					amount := rawskill;
				endif
		
				EraseObjProperty(player, "advamount" + skillnum + "s" + item.serial);
				SetRawSkill(player, skillnum , Cint(rawskill - amount));
				endif

	 temp := GetObjProperty( item, "str" );
	if( temp )
		player.strength_mod := player.strength_mod - Cint(temp);
	endif

	temp := GetObjProperty( item, "int" );
	if( temp )
		player.intelligence_mod := player.intelligence_mod - Cint(temp);
	endif

	temp := GetObjProperty( item, "dex" );
	if( temp )
		player.dexterity_mod := player.dexterity_mod - Cint(temp);
	endif
	
	temp := GetObjProperty( item, "DefaultDex" );
	if( temp )
		player.dexterity_mod := player.dexterity_mod - Cint(temp);
	endif

	temp := Cint(GetObjProperty( item, "ArBonus" ));
	if( temp )
		player.ar_mod := player.ar_mod - Cint(temp/2);
	endif
			endforeach

			if (player.strength > 130)
				broadcast(player.name+" strength over 130!", 3, 43);
			endif
			if (player.intellgence > 130)
				broadcast(player.name+" int over 130!", 3, 43);
			endif
			if (player.dexterity > 130)
				broadcast(player.name+" dex over 130!", 3, 43);
			endif
		
			// naames with spaces are not READ correctly :/ 
			info.+name := player.name;

			info.+Str := player.strength;
			info.+Int := player.intelligence;
			info.+Dex := player.dexterity;
			info.+gender := player.gender;

			// save hair type, NOT colour
			hair := GetEquipmentByLayer(player, 0x0b);
			if (hair)
				info.+hair := hair.objtype;
			endif
			beard := GetEquipmentByLayer(player, 0x10);
			if (beard)
				info.+beard := beard.objtype;
			endif

			// save all skills, done?
			repeat
				// CHANGE TO GET BASE SKILL FOR 095+!!!!
				skillarray.append(GetSkill(player, y));
				if (GetSkill(player, y) > 130)
					broadcast(player.name+" skill over 130");
				endif
			
				y := y + 1;
			until (y > 48);
			info.+Skills := skillarray;
			currentelement.setprop(player.name, info);

			skillarray := {};
			y := 0;
			hair := 0;
			beard := 0;
			playercounter := playercounter + 1;
		endif

		i := i + 1;
		info := struct;
		skillarray := {};
		y := 0;
		hair := 0;
		beard := 0;
	until (i > 5);

	info := struct;
	skillarray := {};
	i := 0;
	y := 0;
	hair := 0;
	beard := 0;
	sleepms(5);
endforeach
	
SendSysMessage(who, "Backed up "+playercounter+" characters.", 3, 53);
*/
/* 	BACKUP SPAWNS AND DECORATION

Note: We are wiping ALL monster type spawns, critters are staying for the moment.
We want to respawn all the dungeons..

*/

var file := OpenDataFile(":convertworld:world");

if (!file)
	CreateDataFile( ":convertworld:world", DF_KEYTYPE_INTEGER);
	file := OpenDataFile(":convertworld:world");
endif
var items := ListObjectsInBox( 0,0,-150, 7168,4094,150 );

foreach item in items

	// Only want items
	if (!item.isa(POLCLASS_MOBILE))
		
		// Spawnpoint
		if (item.objtype == 0xA300)
			SaveSpawnPoint(item, file);
		else
			SaveItem(item, file);
		endif
	sleepms(1);
	endif

endforeach

UnloadDataFile(":convertworld:world");
SendSysMessage(who, "Backed up "+itemcount+" items.", 3, 67);

endprogram

function SaveSpawnPoint(item, file)

var currentelement; 
var pointdata := GetObjProperty(item, "PointData");
var npccfg := ReadConfigFile("::npcdesc");
var npctype := pointdata[2];

npctype := FindConfigElem( npccfg, npctype );

var saveprops := {};
// it's a group
if (pointdata[1] == "Group")
	currentelement := file.CreateElement(itemcount);
	currentelement.SetProp("objtype", 0xA300);

	foreach prop in GetObjPropertyNames( item )
		saveprops.append({prop, GetObjProperty(item, prop)});
	endforeach

	currentelement.SetProp("Props", saveprops);
	currentelement.SetProp("desc", item.desc);
	currentelement.SetProp("name", item.name);
	currentelement.SetProp("color", item.color);
	currentelement.SetProp("Location", {item.x, item.y, item.z});
	itemcount := itemcount + 1;

elseif (pointdata[1] == "NPC")
	currentelement := file.CreateElement(itemcount);
	currentelement.SetProp("objtype", 0xA300);
	foreach prop in GetObjPropertyNames( item )
		if (prop != "#NextValidate" && prop != "Serials")
			saveprops.append({prop, GetObjProperty(item, prop)});
		endif
	endforeach
	currentelement.SetProp("Props", saveprops);
	currentelement.SetProp("desc", item.desc);
	currentelement.SetProp("name", item.name);
	currentelement.SetProp("color", item.color);
	currentelement.SetProp("Location", {item.x, item.y, item.z});
	itemcount := itemcount + 1;		
endif
		

endfunction

function SaveItem(item, file)

var saveprops := {};

// item is locked
if (item.movable == 0)

	// item is NOT on a multi
	if (!item.multi)
	
		// Don't save moongates or sys teles
		if (item.objtype != 25088 && item.objtype != 0x6201)
		
		if (!GetObjProperty(item, "house_serial") && !GetObjProperty(item, "shipserial") && !GetObjProperty(item, "houseserial"))

		// don't want furniture
		if (!GetObjProperty(item, "FromDeed") && !GetObjProperty(item, "lockeddown") )

		// dont want planted trees, last one is trash can
		if (item.objtype != 0xe006 && item.objtype != 0xe007 && item.objtype != 0xe008 && item.objtype != 0xcab)
		// more tree shit
		if (item.objtype != 3492 && item.objtype != 3494 
		&& item.objtype != 3482 && item.objtype != 3480
		&& item.objtype != 3242 
		&& item.objtype != 3486 && item.objtype != 3488
		&& !GetObjProperty(item, "amtu")
		&& item.objtype != 28679)

		var currentelement := file.CreateElement(itemcount);
		currentelement.SetProp("objtype", item.objtype);
		foreach prop in GetObjPropertyNames( item )
			saveprops.append({prop, GetObjProperty(item, prop)});
		endforeach
		currentelement.SetProp("Props", saveprops);
		currentelement.SetProp("desc", item.desc);
		currentelement.SetProp("name", item.name);
		currentelement.SetProp("color", item.color);
		currentelement.SetProp("Location", {item.x, item.y, item.z});
		itemcount := itemcount + 1;
		
		endif
		endif
		endif
		endif
		endif
	endif
endif

endfunction
