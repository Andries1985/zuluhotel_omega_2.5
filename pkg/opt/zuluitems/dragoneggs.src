//put in a skill check to see if you can crack the egg
//and from there it can be 60-40 50-50 some descent chance
//that it will be tame

use uo;
include "include/random";
include "include/areas";
include "include/attributes";

program dragoneggs(who, item)

var secclock:=ReadGameClock();
var lasthatch :=CInt(GetObjProperty(who, "#LastHatch"));

if(!ReserveItem(item)) 
	return 0; 
endif

	if ( secclock< lasthatch)
		SendSysMessage( who, "You have to wait " + (lasthatch-secclock) + " seconds to hatch another egg.");
		return 0;
	endif


	if (IsInSafeArea(who))
		SendSysMessage( who, "You can't hatch eggs in this area.");
		return 0;
	endif

	if (IsInGuardedArea(who))
		SendSysMessage( who, "You can't hatch eggs in this area.");
		return 0;
	endif

	if( IsInNOPKArea(who) )
		SendSysMessage( who, "You can't hatch eggs in this area.");
		return 0;
	endif

SendSysMessage( who, "The egg begins to move and" );

var dragon, typeofdragon :=Random(4), masteralone := Random(100);

case (typeofdragon)

0: dragon := "dragon1";
1: dragon := "dragon2";
2: dragon := "drake1";
3: dragon := "drake2";

endcase

var newpet := CreateNpcFromTemplate( dragon, who.x, who.y, who.z );

if (GetEffectiveSkill( who, 35 )>90)

if (masteralone<70)
 SendSysMessage( who, "A baby dragon appears and accepts you as his master!");
 SetObjProperty (newpet, "master", who.serial);
 SetObjProperty (newpet, "prevtamed", 1);
 newpet.script := "tamed";
 RestartScript (newpet);
endif

else
SendSysMessage( who, "A baby dragon appears!");
endif

subtractamount(item, 1);

// Toadstool - Set hatched info on mob as a string: "players serials, x y z coords of release"
SetObjProperty(newpet, "HatchedBy", "Player: "+who.serial+" XYZ: "+newpet.x+" "+newpet.y+" "+newpet.z);
SetObjProperty(who, "#LastHatch", ReadGameClock()+30);

endprogram
