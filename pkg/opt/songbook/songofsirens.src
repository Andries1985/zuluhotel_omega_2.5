use uo;

include "include/spelldata";
include "include/client";
include "include/objtype";
include "include/skillpoints";
include "include/bard";
include "include/eventid";
include "include/checkcity";
include "include/dotempmods";
const SPELL_EFFECT_TYPE_MOVING 	:= MOVING_SPELL_PARALYZE;
const SPELL_EFFECT_ID		:= FX_SPELL_PARALYZE;
const SPELL_EFFECT_SPEED	:= SPEED_SPELL_PARALYZE;
const SPELL_EFFECT_LOOP		:= LOOP_SPELL_PARALYZE;
program cast_songofsirens( player )
	var singinghp := GetHp( player );
	SetObjProperty( player , "#Casting", 1 );
	var circle := GetCircle( SPELLID_SONG_OF_SIRENS  );
	var instrument := findinstrument( player );
	var sfx_success;
	var sfx_failure;
	case( instrument.graphic )
		UOBJ_HARP:	sfx_success := SFX_HARP_SUCC;
				sfx_failure := SFX_HARP_FAIL;
				break;
				
		UOBJ_LUTE:	sfx_success := SFX_LUTE_SUCC;
				sfx_failure := SFX_LUTE_FAIL;
				break;
				
		UOBJ_DRUM:	sfx_success := SFX_DRUM_SUCC;
				sfx_failure := SFX_DRUM_FAIL;
				break;
				
		UOBJ_TAMB:	sfx_success := SFX_TAMB_SUCC;
				sfx_failure := SFX_TAMB_FAIL;
				break;
				
		default:	PrintTextAbovePrivate( player, "You dont have an Instrument!",player );
				EraseObjProperty( player , "#Casting" );
				return;
	endcase
	

	var peace := GetAttribute(player, ATTRIBUTEID_PEACEMAKING);
	var mus := GetAttribute(player, ATTRIBUTEID_MUSICIANSHIP);
	var spec := GetObjProperty(player,"IsBard") || GetObjProperty(player, "IsBladesinger");
	var ps;
	if (!spec)
		spec := 0;	
	endif
	var drain := 5 + (circle*2)-(spec+5);
	var difficulty := (circle*8)+(Random(25)-(spec*8));
	
	//PrintTextAbove(player,"Difficulty:"+difficulty);
	PerformAction( player, 0X021 );
	if (difficulty > peace or difficulty > mus or !spec)
		PlaySoundEffect( player , sfx_failure );
		PrintTextAbove(player,"*"+player.name+" plays a song poorly*");
		ps := GetStamina( player ) -(drain/2);
		if (ps < 0 )
			ps := 0;
		endif
		SetStamina( player, ps );
		EraseObjProperty( player , "#Casting" );
		return;
	elseif ((GetStamina( player ) -drain) <  0)
		PrintTextAbove(player,"*"+player.name+" plays a song poorly*");
		PrintTextAbovePrivate( player, "Out of Stamina!",player );
		PlaySoundEffect( player , sfx_failure );
	else		
		ps := GetStamina( player ) -drain;
		if (ps < 0 )
			ps := 0;
		endif
		SetStamina( player, ps );
		sleep(2);


		if (GetHp( player ) < singinghp)
			PrintTextAbove(player,"*"+player.name+" plays a song poorly*");
			PrintTextAbovePrivate( player, "You were interrupted!",player );
			PlaySoundEffect( player , sfx_failure );
			EraseObjProperty( player , "#Casting" );
			return;
		else
			PerformAction( player, 0X021 );
			PlaySoundEffect( player , sfx_success );
			PrintTextAbove(player,"Glacio Iniquus Abutor Reverentia");
		endif
		sleep(2);

	endif
	peace := GetEffectiveSkill(player, SKILLID_PEACEMAKING);
	var duration := (peace/4)+Random(10);
	var victims := ListMobilesInLineOfSight( player , cint( (spec+1) * 2 ));

	victims := SmartAoE(player, victims);

	foreach cast_near in victims
		if(!GetObjProperty(cast_near, "Boss") && !GetObjProperty(cast_near, "SuperBoss") && !IsInSafeArea(cast_near))
			if((!ValidSongTarget(player, cast_near)) || GetObjProperty( cast_near , "FreeAction" ))
				SendSysmessage( cast_near, "You are magically protected from paralyzing effects" );
			else
				PlayObjectCenteredEffect(cast_near, 
				SPELL_EFFECT_ID,
				SPELL_EFFECT_SPEED,
				SPELL_EFFECT_LOOP);
				PlaySoundEffect( cast_near , SFX_SPELL_PARALYZE );
				duration := ModifyWithMagicEfficiency( player , Resisted( player , cast_near , 5 , duration) );
				DoTempMod(cast_near, "p", 1, duration);
			endif
		endif
	endforeach
	EraseObjProperty( player , "#Casting" );
		
endprogram
