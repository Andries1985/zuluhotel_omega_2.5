use uo;

include "include/spelldata";
include "include/client";
include "include/objtype";
include "include/skillpoints";
include "include/bard";
include "include/eventid";
include "include/checkcity";
include "include/dotempmods";
include "include/areas";

const SPELL_EFFECT_TYPE_MOVING	:= MOVING_SPELL_DISPEL;
const SPELL_EFFECT_ID		:= FX_SPELL_DISPEL;
const SPELL_EFFECT_SPEED	:= SPEED_SPELL_DISPEL;
const SPELL_EFFECT_LOOP		:= LOOP_SPELL_DISPEL;

program cast_songofdismissal( player )
	//var singinghp := GetHp( player );
	SetObjProperty( player , "#Casting", 1 );
	var circle := GetCircle( SPELLID_SONG_OF_DISMISSAL );
	var instrument := findinstrument( player );
	var sfx_success;
	var sfx_failure;
	case( instrument.graphic )
		UOBJ_HARP:	sfx_success := SFX_HARP_SUCC;
				sfx_failure := SFX_HARP_FAIL;
				break;
				
		UOBJ_LUTE:	sfx_success := SFX_LUTE_SUCC;
				sfx_failure := SFX_LUTE_FAIL;
				break;
				
		UOBJ_DRUM:	sfx_success := SFX_DRUM_SUCC;
				sfx_failure := SFX_DRUM_FAIL;
				break;
				
		UOBJ_TAMB:	sfx_success := SFX_TAMB_SUCC;
				sfx_failure := SFX_TAMB_FAIL;
				break;
				
		default:	PrintTextAbovePrivate( player, "You dont have an Instrument!",player );
				EraseObjProperty( player , "#Casting" );
				return;
	endcase
	

	var peace := GetAttribute(player, ATTRIBUTEID_PEACEMAKING);
	var mus := GetAttribute(player, ATTRIBUTEID_MUSICIANSHIP);
	var spec := GetObjProperty(player,"IsBard") || GetObjProperty(player, "IsBladesinger");
	var ps;
	if (!spec)
		spec := 0;	
	endif
	var drain :=  30 + (circle*2)-(spec+5);
	var difficulty := (circle*9)+(Random(25)-(spec*8));
	
	//PrintTextAbove(player,"Difficulty:"+difficulty);
	PerformAction( player, 0X021 );
	if (difficulty > peace or difficulty > mus or !spec)
		PlaySoundEffect( player , sfx_failure );
		EraseObjProperty( player , "#Casting" );
		PrintTextAbove(player,"*"+player.name+" plays a song poorly*");
		ps := GetStamina( player ) -(drain/2);
		if (ps < 0 )
			ps := 0;
		endif
		SetStamina( player, ps );
		return;
	elseif ((GetStamina( player ) -drain) <  0)
		PrintTextAbove(player,"*"+player.name+" plays a song poorly*");
		PrintTextAbovePrivate( player, "Out of Stamina!",player );
		PlaySoundEffect( player , sfx_failure );
	else
		ps := GetStamina( player ) -drain;
		if (ps < 0 )
			ps := 0;
		endif
		SetStamina( player, ps );
		sleep(1);
//		if (GetHp( player ) < singinghp)
//			PrintTextAbove(player,"*"+player.name+" plays a song poorly*");
//			PrintTextAbovePrivate( player, "You were interrupted!",player );
//			PlaySoundEffect( player , sfx_failure );
//			EraseObjProperty( player , "#Casting" );
//			return;
//		else
			PerformAction( player, 0X021 );
			PlaySoundEffect( player , sfx_success );
			PrintTextAbove(player,"Deporto Eiusmodi Impurus Veneficium");
//		endif 
		sleep(1);
		var range := CInt( peace / 25 )+(spec/3);
		var victims := ListMobilesInLineOfSight( player , range)+player;

		victims := SmartAoE(player, victims);

		foreach cast_near in victims
			if(!IsInSafeArea(cast_near) || GetObjProperty(cast_near, "pvping"))
				PlayObjectCenteredEffect(cast_near, 
				SPELL_EFFECT_ID,
				SPELL_EFFECT_SPEED,
				SPELL_EFFECT_LOOP);
				PlaySoundEffect( cast_near, SFX_SPELL_DISPEL );
				WipeMods( cast_near );
				if( cast_near.graphic != cast_near.trueobjtype and !cast_near.dead )
						cast_near.graphic := cast_near.trueobjtype;
				endif
			endif
		endforeach
	endif
	EraseObjProperty( player , "#Casting" );
endprogram
