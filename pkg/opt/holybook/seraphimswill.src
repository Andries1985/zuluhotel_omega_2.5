use uo;
use os;

include "include/spelldata";
include "include/dotempmods";
include "include/client";

const SPELL_EFFECT_TYPE_MOVING 	:= MOVING_SPELL_HOLY_BLESS;
const SPELL_EFFECT_ID		:= FX_SPELL_HOLY_BLESS;
const SPELL_EFFECT_SPEED	:= SPEED_SPELL_HOLY_BLESS;
const SPELL_EFFECT_LOOP		:= LOOP_SPELL_HOLY_BLESS;

program cast_seraphims_will( parms )

	var circle := GetCircle( SPELLID_HOLY_BLESS );
	var caster;
	var fromhit;

 	if (parms[1] == "#MOB")
		caster := parms[2];
		if (parms[4])
			circle := parms[4];
		endif
		if (parms[5])
			fromhit := parms[5];
		endif

	else
		caster := parms;
		if( TryToCast( caster, SPELLID_HOLY_BLESS ) != SUCCESS )
			EraseObjProperty( caster , "#Casting" );
			return;
		endif
	endif
	PlayObjectCenteredEffect(caster, SPELL_EFFECT_ID, SPELL_EFFECT_SPEED, SPELL_EFFECT_LOOP);
	PlaySoundEffect( caster , SFX_SPELL_HOLY_BLESS );
	
	var mod_amount := 0;
	var duration := GetModDuration( caster );
	if(GetObjProperty( caster, "IsPaladin") )
		mod_amount := Cint( GetModAmount( caster ) * 4.25 );
		//Print("Paladin Mod Amount: "+mod_amount);
	elseif(GetObjProperty( caster, "IsMage") )
		mod_amount := Cint( GetModAmount( caster ) );
		//Print("Mage Mod Amount: "+mod_amount);
	else
		mod_amount := Cint( GetModAmount( caster ) * 3 );
		//Print("Normal Mod Amount: "+mod_amount);
	endif

	if( CanMod( caster , "all" ) && CanMod( caster , "ebless" ) && CanMod( caster, "poly")) 
		DoTempMod( caster, "poly" , mod_amount , duration );
		SendBoostMessage( caster, caster, "seraphims will", mod_amount, duration, 0 );
	else
		SendSysMessage( caster , "Already under the influence!" );
	endif
	/*
	var mod_amount := Cint( GetModAmount( caster )  );
	var duration := Cint( GetModDuration( caster )  );
	if( CanMod( caster , "all" ) && CanMod( caster , "ebless" ) && CanMod( caster , "poly" ) )
		DoTempMod( caster, "all" , mod_amount , duration );
	endif
	if( CanMod( caster , "ar" ) )
		DoTempMod( caster , "ar" , Cint(mod_amount * 0.75)+1 , duration );
	endif
	

	var magery := GetAttribute(caster, ATTRIBUTEID_MAGERY);
	var specbonus := 0;
	if (GetObjProperty(caster, "IsMage"))
		specbonus := GetObjProperty(caster, "IsMage");
	elseif (GetObjProperty(caster, "IsPaladin"))
		specbonus := GetObjProperty(caster, "IsPaladin");
	endif
	if (!specbonus)
		specbonus := 0;
	endif
	var affected := ListMobilesNearLocation( caster.x , caster.y , caster.z , cint( (magery / 50)+specbonus ), caster.realm );
	
	var caster_NPC := 0;
	if (caster.npctemplate)	
		caster_NPC := 1;
	endif

	affected := SmartBoost(caster, affected);

	foreach cast_near in affected
		var cast_near_NPC := 0;
		if (cast_near.npctemplate)
			cast_near_NPC:= 1;
		endif
		if(cast_near_NPC != caster_NPC)			
			if(cast_near.master != caster)
				continue;
			endif
		endif
		PlayObjectCenteredEffect(cast_near, SPELL_EFFECT_ID, SPELL_EFFECT_SPEED, SPELL_EFFECT_LOOP);											
		PlaySoundEffect( cast_near , SFX_SPELL_HOLY_BLESS );	
		
		var mod_amount := 0;
		var duration := GetModDuration( caster );
		if(GetObjProperty( caster, "IsPaladin") )
			mod_amount := Cint( GetModAmount( caster ) * 3 );
			Print("Paladin Mod Amount: "+mod_amount);
		elseif(GetObjProperty( caster, "IsMage") )
			mod_amount := Cint( GetModAmount( caster ) );
			Print("Mage Mod Amount: "+mod_amount);
		else
			mod_amount := Cint( GetModAmount( caster ) * 2 );
			Print("Normal Mod Amount: "+mod_amount);
		endif

		if( CanMod( caster , "all" ) && CanMod( caster , "ebless" ) && CanMod( caster, "poly")) 
			DoTempMod( caster, "poly" , mod_amount , duration );
			SendBoostMessage( caster, caster, "seraphims will", mod_amount, duration, 0 );
		else
			SendSysMessage( caster , "Already under the influence!" );
		endif

		/*
		var mod_amount := Cint( GetModAmount( caster )  );
		var duration := Cint( GetModDuration( caster )  );	
		if( CanMod( cast_near , "all" )  && CanMod( cast_near , "ebless" ) && CanMod( caster , "poly" ) )
			DoTempMod( cast_near, "all" , mod_amount , duration );
		endif
		if( CanMod( cast_near , "ar" ) )
			DoTempMod( cast_near , "ar" , Cint(mod_amount * 0.75)+1 , duration );
		endif
		
	endforeach
	*/
	EraseObjProperty( caster , "#Casting" );
	
endprogram

                                                
