use uo;
use os;

include "include/dotempmods";
include "include/spelldata";
include "include/client";

const SPELL_EFFECT_TYPE_MOVING 	:= MOVING_SPELL_ENLIGHTENMENT;
const SPELL_EFFECT_ID		:= FX_SPELL_ENLIGHTENMENT;
const SPELL_EFFECT_SPEED	:= SPEED_SPELL_ENLIGHTENMENT;
const SPELL_EFFECT_LOOP		:= LOOP_SPELL_ENLIGHTENMENT;

program cast_CUNNING( parms )

	var circle := 8;
	var caster;
	var cast_on;
	var fromhit;

	if (parms[1] == "#MOB")
		caster := parms[2];
		cast_on := parms[3];
		if (parms[4])
			circle := parms[4];
		endif
		if (parms[5])
			fromhit := parms[5];
		endif
 
	else
		caster := parms;
		if( TryToCast( caster, SPELLID_ENLIGHTENMENT ) != SUCCESS )
			EraseObjProperty( caster , "#Casting" );
			return;
		endif
	endif

	if( !fromhit )
		detach();
		cast_on := Reflected( caster , caster , circle );
		EraseObjProperty( caster , "#Casting" );
	else
		PlayObjectCenteredEffect(caster, SPELL_EFFECT_ID, SPELL_EFFECT_SPEED, SPELL_EFFECT_LOOP);
	endif
	
	PlaySoundEffect(caster, SFX_SPELL_ENLIGHTENMENT);

	/*
	if (!CanMod(caster, "int"))
		SendSysMessage(caster,"Already under the influence!");
		return;
	endif

	var mod_amount := (GetModAmount( caster )*1.6);
	var duration := GetModDuration( caster );
	DoTempMod(caster, "int", mod_amount, duration);
	mod_amount := Cint( GetModAmount( caster ) /2 );
	duration := GetModDuration( caster );
	DoTempMod(caster, "ar", mod_amount, duration);
	EraseObjProperty( caster , "#Casting" );
	*/
	var mod_amount := 0;
	var duration := GetModDuration( caster );
	if(GetObjProperty( caster, "IsPaladin") )
		mod_amount := Cint( GetModAmount( caster ) * 3 );
		Print("Paladin Mod Amount: "+mod_amount);
	elseif(GetObjProperty( caster, "IsMage") )
		mod_amount := Cint( GetModAmount( caster ) );
		Print("Mage Mod Amount: "+mod_amount);
	else
		mod_amount := Cint( GetModAmount( caster ) * 2 );
		Print("Normal Mod Amount: "+mod_amount);
	endif

	if (CanMod(caster, "dex"))
		DoTempMod(caster, "dex", mod_amount, duration);
	endif

	if (CanMod(caster, "str"))
		DoTempMod(caster, "str", mod_amount, duration);
	endif

	if (CanMod(caster, "ar"))
		var arAmount := Cint(mod_amount/1.25);
		DoTempMod(caster, "ar", arAmount, duration);
	endif

	if (CanMod(caster, "int"))
		DoTempMod(caster, "int", mod_amount, duration);
	endif
endprogram
